# Workflow name
name: Backend Continuous Deployment

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
  
  # Automatic trigger on merge to the main branch
  pull_request:
    branches:
      - main
    # Execute the action on closed (merged) PR.
    types: [closed]
    paths:
      - 'starter/backend/**'

env:
  KUBECTL_VERSION: "v1.25.4"

# Jobs defined in the workflow
jobs:

  # Runs Liting
  LINT-JOB:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}
    
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r starter/backend/requirements.txt

      - name: Runs Linting
        id: lint
        uses: py-actions/flake8@v2
        with:
          ignore: "E501" 

  # Tests Liting
  TEST-JOB:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}
    
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r starter/backend/requirements.txt

      - name: Test Linting
        id: tests
        run: |
          cd starter/backend && pytest
  
  # builds the application          
  BUILD-JOB:
    needs: [LINT-JOB, TEST-JOB]
    runs-on: ubuntu-latest
    
    environment:
          name: development
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
    
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r starter/backend/requirements.txt

      - name: Runs Linting
        id: lint
        uses: py-actions/flake8@v2
        with:
          ignore: "E501"

      - name: Runs the tests
        id: tests
        run: |
          cd starter/backend && pytest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the docker image
        run: |
              cd starter/backend
              docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:${GITHUB_SHA::7} .
              docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:${GITHUB_SHA::7}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Install kubectl
        id: kubectl-installer
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ env.KUBECTL_VERSION }}

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Logging into ECR to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Configure kubeconfig file
        env:
          EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
        run: |
              aws eks --region us-east-1 update-kubeconfig --name $EKS_CLUSTER
      
      - name: Configure image
        env:
          ECR_REGISTRY: ${{ steps.ecr.outputs.registry }}
          ECR_REPOSITORY: backend
        run: |
            cd starter/backend/k8s
            kustomize edit set image backend=$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7}

      - name: Push docker image to ECR
        env:
          ECR_REPOSITORY: backend
          ECR_REGISTRY: ${{ steps.ecr.outputs.registry }}
        run: |
            cd starter/backend
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7} .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7}

      - name: Verify entire Kubeconfig file
        run: kubectl config view

      - name: Deploy application to EKS Cluster
        run: |
            cd starter/backend/k8s
            kustomize build | kubectl apply -f -